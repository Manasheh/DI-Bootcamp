What is a class?
A class is a blueprint for creating objects. 
It defines a set of attributes and methods that the created objects (instances) will have.
Think of it as a template for creating objects with similar properties and behaviors.

What is an instance?
An instance is a specific object created from a class. 
It has the class-defined attributes and methods. 

What is encapsulation?
Encapsulation is the mechanism of bundling the data (attributes) and methods
that operate on the data into a single unit, or class, and restricting access to 
some of the objectâ€™s components. This means that the internal representation of an 
object is hidden from the outside, only exposing what is necessary.

What is abstraction?
Abstraction is the concept of hiding the complex reality while exposing only the necessary parts. 
It's a way to reduce complexity and allow efficient design and implementation. 

What is inheritance?
Inheritance is a way to form new classes using classes that have already been defined. 
The new class, known as a derived or child class, inherits attributes and methods of the existing class, 
known as a base or parent class. This allows for code reuse and the creation of a more logical structure.

What is multiple inheritance?
Multiple inheritance is a feature of some object-oriented programming languages in which a class can 
inherit behaviors and attributes from more than one parent class. This can be useful but also lead to 
complications (like the Diamond Problem), and different languages have different ways of dealing with these.

What is polymorphism?
Polymorphism is the ability of an object to take on many forms. 
The most common use of polymorphism in OOP occurs when a parent class 
reference is used to refer to a child class object. It allows methods to 
do different things based on the object it is acting upon, even though they might share the same name.

What is method resolution order or MRO?
Method Resolution Order (MRO) is the order in which base 
classes are searched when executing a method. In multiple inheritance scenarios, 
it determines the order in which methods are resolved.